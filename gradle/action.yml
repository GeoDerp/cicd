name: DevSecOps Gradle Action
description: A composite action for Gradle with DevSecOps features

inputs:
  java-version:
    description: 'The version of Java to use for building'
    required: true
  gradle-version:
    description: 'The version of Gradle to use for building'
    required: true
  project-type:
    description: ' project type: application or library'
    required: true
    default: 'application'
  sonarcloud-token:
    description: 'Token for SonarCloud integration'
    required: false
  dockerhub-secret:
    description: 'Password for Docker Hub'
    required: false
  azure-container-registry:
    description: 'Azure Container Registry name'
    required: false
    default: ''

runs:
  using: 'composite'
  steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Conventional Git Commit Linting
      run: |
        # Add your conventional git linting commands here

    - name: Versioning using ssot.json
      run: |
        # Add your versioning commands using ssot.json here

    - name: Set up Java
      uses: actions/setup-java@v2
      with:
        java-version: ${{ inputs.java-version }}

    - name: Set up Gradle
      run: |
        # Add your Gradle setup commands here

    - name: Build
      run: |
        # Add your Gradle build commands here

    - name: Test
      run: |
        # Add your test commands here

    - name: SAST with SonarCloud
      if: ${{ inputs.sonarcloud-token }}
      run: |
        # Add your SonarCloud SAST commands here

    - name: Push to Maven Central
      if: ${{ project-type == 'library' && github.repository_visibility == 'public' }}
      run: |
        # Add your Docker Hub push commands here
        # exit the pipeline
        exit 0
    - name: Push to Github or Azure Private artefacts
      if: ${{ project-type == 'library' && github.repository_visibility == 'private' }}
      run: |
        # Add your Docker Hub push commands here
        # exit the pipeline
        exit 0

    - name: Docker Build
      run: |
        # Add your Docker build commands here

    - name: Trivy Container Scan
      run: |
        # Add your Trivy container scan commands here

    - name: Push to Docker Hub
      if: ${{ github.repository_visibility == 'public' }}
      run: |
        # Add your Docker Hub push commands here

    - name: Push to Azure Container Registry
      if: ${{ github.repository_visibility == 'private' }}
      run: |
        # Add your Azure Container Registry push commands here